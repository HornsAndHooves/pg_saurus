# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-
# stub: pg_saurus 4.3.0 ruby lib

Gem::Specification.new do |s|
  s.name = "pg_saurus".freeze
  s.version = "4.3.0"

  s.required_rubygems_version = Gem::Requirement.new(">= 0".freeze) if s.respond_to? :required_rubygems_version=
  s.require_paths = ["lib".freeze]
  s.authors = ["Potapov Sergey".freeze, "Arthur Shagall".freeze, "Artem Ignatyev".freeze, "Matt Dressel".freeze, "Bruce Burdick".freeze, "HornsAndHooves".freeze]
  s.date = "2021-09-22"
  s.description = "ActiveRecord extensions for PostgreSQL. Provides useful tools for schema, foreign_key, index, function, trigger, comment and extension manipulations in migrations.".freeze
  s.email = ["blake131313@gmail.com".freeze, "arthur.shagall@gmail.com".freeze, "cryo28@gmail.com".freeze, "matt.dressel@gmail.com".freeze, "rubygems.org@bruceburdick.com".freeze]
  s.extra_rdoc_files = [
    "README.markdown"
  ]
  s.files = [
    "README.markdown",
    "lib/colorized_text.rb",
    "lib/core_ext/active_record/connection_adapters/postgresql/column.rb",
    "lib/core_ext/active_record/connection_adapters/postgresql/schema_statements.rb",
    "lib/core_ext/active_record/errors.rb",
    "lib/core_ext/active_record/schema_dumper.rb",
    "lib/generators/pg_saurus/install/install_generator.rb",
    "lib/generators/pg_saurus/install/templates/config/initializers/pg_saurus.rb",
    "lib/pg_saurus.rb",
    "lib/pg_saurus/config.rb",
    "lib/pg_saurus/connection_adapters.rb",
    "lib/pg_saurus/connection_adapters/abstract_adapter.rb",
    "lib/pg_saurus/connection_adapters/abstract_adapter/comment_methods.rb",
    "lib/pg_saurus/connection_adapters/abstract_adapter/function_methods.rb",
    "lib/pg_saurus/connection_adapters/abstract_adapter/index_methods.rb",
    "lib/pg_saurus/connection_adapters/abstract_adapter/schema_methods.rb",
    "lib/pg_saurus/connection_adapters/abstract_adapter/trigger_methods.rb",
    "lib/pg_saurus/connection_adapters/foreign_key_definition.rb",
    "lib/pg_saurus/connection_adapters/function_definition.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/comment_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/extension_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/foreign_key_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/function_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/index_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/schema_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/translate_exception.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/trigger_methods.rb",
    "lib/pg_saurus/connection_adapters/postgresql_adapter/view_methods.rb",
    "lib/pg_saurus/connection_adapters/table.rb",
    "lib/pg_saurus/connection_adapters/table/comment_methods.rb",
    "lib/pg_saurus/connection_adapters/table/trigger_methods.rb",
    "lib/pg_saurus/connection_adapters/trigger_definition.rb",
    "lib/pg_saurus/create_index_concurrently.rb",
    "lib/pg_saurus/engine.rb",
    "lib/pg_saurus/errors.rb",
    "lib/pg_saurus/migration.rb",
    "lib/pg_saurus/migration/command_recorder.rb",
    "lib/pg_saurus/migration/command_recorder/comment_methods.rb",
    "lib/pg_saurus/migration/command_recorder/extension_methods.rb",
    "lib/pg_saurus/migration/command_recorder/function_methods.rb",
    "lib/pg_saurus/migration/command_recorder/schema_methods.rb",
    "lib/pg_saurus/migration/command_recorder/trigger_methods.rb",
    "lib/pg_saurus/migration/command_recorder/view_methods.rb",
    "lib/pg_saurus/migration/set_role_method.rb",
    "lib/pg_saurus/schema_dumper.rb",
    "lib/pg_saurus/schema_dumper/comment_methods.rb",
    "lib/pg_saurus/schema_dumper/extension_methods.rb",
    "lib/pg_saurus/schema_dumper/foreign_key_methods.rb",
    "lib/pg_saurus/schema_dumper/function_methods.rb",
    "lib/pg_saurus/schema_dumper/schema_methods.rb",
    "lib/pg_saurus/schema_dumper/trigger_methods.rb",
    "lib/pg_saurus/schema_dumper/view_methods.rb",
    "lib/pg_saurus/tools.rb",
    "lib/pg_saurus/version.rb",
    "lib/tasks/pg_saurus_tasks.rake"
  ]
  s.homepage = "https://github.com/HornsAndHooves/pg_saurus".freeze
  s.licenses = ["MIT".freeze]
  s.rubygems_version = "2.7.9".freeze
  s.summary = "ActiveRecord extensions for PostgreSQL.".freeze

  if s.respond_to? :specification_version then
    s.specification_version = 4

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<pg>.freeze, [">= 0"])
      s.add_runtime_dependency(%q<psych>.freeze, ["~> 3"])
      s.add_runtime_dependency(%q<railties>.freeze, ["~> 6"])
      s.add_runtime_dependency(%q<activemodel>.freeze, ["~> 6"])
      s.add_runtime_dependency(%q<activerecord>.freeze, ["~> 6"])
      s.add_runtime_dependency(%q<activesupport>.freeze, ["~> 6"])
      s.add_development_dependency(%q<rspec-rails>.freeze, [">= 0"])
      s.add_development_dependency(%q<yard>.freeze, [">= 0"])
      s.add_development_dependency(%q<metric_fu>.freeze, [">= 0"])
      s.add_development_dependency(%q<jeweler>.freeze, [">= 0"])
      s.add_development_dependency(%q<byebug>.freeze, [">= 0"])
      s.add_development_dependency(%q<pry>.freeze, [">= 0"])
      s.add_development_dependency(%q<pry-byebug>.freeze, [">= 0"])
      s.add_development_dependency(%q<rubocop>.freeze, [">= 0"])
    else
      s.add_dependency(%q<pg>.freeze, [">= 0"])
      s.add_dependency(%q<psych>.freeze, ["~> 3"])
      s.add_dependency(%q<railties>.freeze, ["~> 6"])
      s.add_dependency(%q<activemodel>.freeze, ["~> 6"])
      s.add_dependency(%q<activerecord>.freeze, ["~> 6"])
      s.add_dependency(%q<activesupport>.freeze, ["~> 6"])
      s.add_dependency(%q<rspec-rails>.freeze, [">= 0"])
      s.add_dependency(%q<yard>.freeze, [">= 0"])
      s.add_dependency(%q<metric_fu>.freeze, [">= 0"])
      s.add_dependency(%q<jeweler>.freeze, [">= 0"])
      s.add_dependency(%q<byebug>.freeze, [">= 0"])
      s.add_dependency(%q<pry>.freeze, [">= 0"])
      s.add_dependency(%q<pry-byebug>.freeze, [">= 0"])
      s.add_dependency(%q<rubocop>.freeze, [">= 0"])
    end
  else
    s.add_dependency(%q<pg>.freeze, [">= 0"])
    s.add_dependency(%q<psych>.freeze, ["~> 3"])
    s.add_dependency(%q<railties>.freeze, ["~> 6"])
    s.add_dependency(%q<activemodel>.freeze, ["~> 6"])
    s.add_dependency(%q<activerecord>.freeze, ["~> 6"])
    s.add_dependency(%q<activesupport>.freeze, ["~> 6"])
    s.add_dependency(%q<rspec-rails>.freeze, [">= 0"])
    s.add_dependency(%q<yard>.freeze, [">= 0"])
    s.add_dependency(%q<metric_fu>.freeze, [">= 0"])
    s.add_dependency(%q<jeweler>.freeze, [">= 0"])
    s.add_dependency(%q<byebug>.freeze, [">= 0"])
    s.add_dependency(%q<pry>.freeze, [">= 0"])
    s.add_dependency(%q<pry-byebug>.freeze, [">= 0"])
    s.add_dependency(%q<rubocop>.freeze, [">= 0"])
  end
end

